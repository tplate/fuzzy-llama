* allow multiple value columns (like a 3-d data frame)
* figure out desired j behavior for NA and out-of-range j indices
* add binary search to Cpp code
* make i,j indexing sort the i's (and produce a kk same as for matrix indexing)
* add tests for replacement function
   - where we don't actually change anything
   - where one change turns a later non-change into a change
   - out of time-order rows in the newdata arg
   - just have a single date beyond the range of the existing
* make Extract.R efficient for factor component in data.frame indices
* DONE: get Cpp code working for matrix indexing
* DONE: add backfill arg to Cpp code for square i,j indexing
* DONE: get add.data function being more efficient for the case where adding
  a single date that is greater than all existing
* DONE: replacement function -- go via data.frame representation
* DONE: get Cpp code working for i,j indexing
* DONE: make x$id be agnostic to order, add id.noc component for lengths
* DONE: add 'default' value to structure to use earlier (backfill T/F)
* DONE: conversion from non-sparse matrix
* DONE: sparsify data frame data
* DONE: appending multiple row of data
* DONE: appending records of data
* DONE: inserting single row of data
* DONE: inserting multiple row of data
* DONE: inserting records of data
* DONE: optional colnames argument for original constructor
* DONE: i,j subsetting
* DONE: matrix subsetting
* DONE: disallow missing rownames (allowed in case of numeric dates on x)
* DONE: test for medium size matrix
* DONE: test for large size matrix
* DONE: get tests working
