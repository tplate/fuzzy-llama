% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/update.Matrix.R
\name{update.Matrix}
\alias{update.Matrix}
\alias{update.matrix}
\title{Add data to an object (obselete version of add.data)}
\usage{
\method{update}{Matrix}(object, data, need.dimnames = list(NULL, NULL),
  keep.ordered = TRUE, ...)

\method{update}{matrix}(object, data, need.dimnames = list(NULL, NULL),
  keep.ordered = TRUE, ...)
}
\arguments{
\item{object}{An object to add data to, specified by name (i.e., a character string).
The object is changed in place (i.e., the function will have side effects).}

\item{data}{New data to incorporate in the object.
Should have the same number of dimensions as the object
being updated (i.e.,
\code{length(dim(x))==length(dim(data))}).  Must have
dimnames.}

\item{need.dimnames}{Dimension names that should be included in the updated object.}

\item{keep.ordered}{Logical.  Specifies which dimensions should be
kept ordered.  Can be a single element or a vector with
length equal to the number of dimensions of
\code{object}.}

\item{\dots}{Not used, but needed because \code{add.data()} could be a generic.}
}
\value{
The altered object \code{x}.  If \code{x} was the
name of an object, then the altered object is also
updated in place.
}
\description{
Update the contents of a Matrix or matrix object, adding new dimension
indices if necessary.
}
\details{
Can be used in multiple ways, either called as a generic or calling the method directly (to create the object if it does not already exist):
\itemize{
\item
add.data(x, newdata): adds newdata to existing object x and returns the modified x (no side effects)
\item
add.data.Matrix(x, newdata): adds newdata to existing Matrix object x (no side effects)
\item
add.data('x', newdata): adds newdata to existing object named 'x' and saves the modified x (has side effects)
\item
add.data.Matrix('x', newdata): adds newdata to existing Matrix object named 'x' and saves the modified object in 'x' OR if 'x' doesn't exist, creates new Matrix object with contents newdata and saves it in 'x' (has side effects)
}
}
\note{
Not really closely related to \code{varray} objects, but supplied here
 as a useful analogue to \code{\link{add.tsdata.varray}}.
}
\examples{
x <- cbind(A=c(a=1))
update.matrix('x', cbind(B=c(b=2)))
x
}

